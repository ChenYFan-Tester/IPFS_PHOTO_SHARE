/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 717:
/***/ (() => {


;// CONCATENATED MODULE: ./node_modules/_html-loader@2.1.2@html-loader/dist/cjs.js!./index.html
// Module
var code = "<!doctype html> <html lang=\"zh\" class=\"no-js\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"> <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"> <title>IPFS PHOTO SHARE</title> <link href=\"https://fonts.geekzu.org/css?family=Source+Sans+Pro:400,300,700,400italic\" rel=\"stylesheet\"> <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/ChenYFan-Tester/ipfscloud/css/style.css\"> <style>.grecaptcha-badge{display:none!important}</style> <script src=\"https://cdn.jsdelivr.net/gh/ChenYFan-Tester/ipfscloud/js/modernizr.js\"></script> </head> <body> <div style=\"position:fixed;top:0;left:0;width:100%;height:100%;min-width:1000px;z-index:-10;zoom:1;background-color:#fff;background-repeat:no-repeat;background-size:cover;-webkit-background-size:cover;-o-background-size:cover;background-position:center 0;background-image:url(https://cdn.jsdelivr.net/npm/chenyfan-acg-bg@0.0.9/22.jpg)\"></div> <div class=\"cd-intro-block\"> <div class=\"content-wrapper\"> <div class=\"htmleaf-header\"> <h1>IPFS PHOTO SHARE <span>最大100MB · 无限制 · 开放 · 共享的图片分享</span></h1> <a class=\"cd-btn\" href=\"javascript:document.getElementById('file').click();\">上传文件</a> <input type=\"file\" id=\"file\" style=\"display:none\"> </div> <a class=\"cd-btn\" href=\"javascript:void(0)\" data-action=\"show-projects\">查看分享</a> </div> </div> <div class=\"cd-projects-wrapper\"> <ul class=\"cd-slider\"> </ul> <ul class=\"cd-slider-navigation cd-img-replace\"> <li><a href=\"#0\" class=\"prev inactive\">上一个</a></li> <li><a href=\"#0\" class=\"next\">下一个</a></li> </ul> </div> <script src=\"https://recaptcha.net/recaptcha/api.js?render=6Lc6tp8aAAAAAO7y-YkhZQ3eYYt8FZnBi873CTGD\"></script> <script src=\"https://cdn.jsdelivr.net/npm/sweetalert\"></script> <script src=\"https://cdn.jsdelivr.net/npm/jquery@2.1.1\"></script> <script src=\"https://cdn.jsdelivr.net/gh/ChenYFan-Tester/ipfscloud/js/jquery.mobile.custom.min.js\"></script> <script src=\"https://cdn.jsdelivr.net/gh/ChenYFan-Tester/ipfscloud/js/main.js\"></script> <script>window.replaceimg=(e,t)=>{document.getElementById(e).src=t},document.getElementById(\"file\").addEventListener(\"change\",async()=>{try{swal.close()}catch(e){}swal({title:\"\\n人机验证中...\",icon:\"https://cdn.jsdelivr.net/gh/HexoPlusPlus/CDN@db63c79/loading.gif\",text:\"\\n\",button:!1,closeModal:!1}),grecaptcha.ready(()=>{grecaptcha.execute(\"6Lc6tp8aAAAAAO7y-YkhZQ3eYYt8FZnBi873CTGD\",{action:\"ipfs_photo\"}).then(async e=>{try{swal.close()}catch(c){}swal({title:\"\\n上传中...\",icon:\"https://cdn.jsdelivr.net/gh/HexoPlusPlus/CDN@db63c79/loading.gif\",text:\"\\n\",button:!1,closeModal:!1});var t=new FormData;t.append(\"file\",document.getElementById(\"file\").files[0]);const c=await(await fetch(\"/upload?token=\"+e,{method:\"POST\",body:t})).json();if(c.ctx.success){try{swal.close()}catch(c){}swal(\"成功！\",\"你的文件已上传，刷新即可在分享区查看您上传的图片\",\"success\")}else{try{swal.close()}catch(c){}swal(\"失败！！\",c.msg,\"error\")}})})})</script> </body> </html>";
// Exports
/* harmony default export */ const cjs_js_index = (code);
;// CONCATENATED MODULE: ./accept.json
const accept_namespaceObject = JSON.parse('[".jpg",".png",".gif",".jpeg",".webp"]');
;// CONCATENATED MODULE: ./node_modules/_raw-loader@4.0.2@raw-loader/dist/cjs.js!./html/init.html
/* harmony default export */ const init = ("<li onclick=\"replaceimg('<!--HASH-->','<!--URL-->')\">\n    <a href=\"#0\">\n        <img id=\"<!--HASH-->\" src=\"/get?hash=QmQDMMVwfeXbia2UwTuqbBtDV24eVzqbcFogFngKkfj4Dv\" alt=\"project image \" style=\"margin: 0 auto;max-height: 40vh;width:unset\">\n        <div class=\"project-info\">\n            <h2><!--NAME--></h2>\n            <p><!--INTRO--></p>\n        </div>\n    </a>\n</li>");
;// CONCATENATED MODULE: ./node_modules/_html-loader@2.1.2@html-loader/dist/cjs.js!./html/currentinit.html
// Module
var currentinit_code = "<li class=\"current\"> <a href=\"#0\"> <img src=\"https://cdn.jsdelivr.net/npm/chenyfan-acg-pic@0.0.11/166.jpg\" alt=\"project image\"> <div class=\"project-info\"> <h2>ALL FILES IN OUR CLOUD</h2> <p>右边是别人愿意共享出来的图片</p> </div> </a> </li>";
// Exports
/* harmony default export */ const currentinit = (currentinit_code);
;// CONCATENATED MODULE: ./src/gres.js
const gres = (c) => {
    if (c.type == 'html') {
        return new Response(c.ctx, {
            status: c.status ? c.status : 200, headers: {
                "Content-Type": "text/html; charset=utf-8"
            },
        })
    } else if (c.type == "json") {
        return new Response(JSON.stringify({
            ctx: c.ctx,
            status: c.status === 0 ? 0 : c.status,
            msg: c.msg ? c.msg : "没有额外的消息",
            timestmp: (new Date()).valueOf()
        }), {
            status: c.status ? c.status : 200, headers: {
                "Content-Type": "text/html; charset=utf-8"
            },
        })

    } else {
        return new Response(c.ctx)
    }
}
/* harmony default export */ const src_gres = (gres);
;// CONCATENATED MODULE: ./src/recaptcha.js
const recaptcha = async (secret, code, action) => {
    const n = await (await fetch(`https://www.recaptcha.net/recaptcha/api/siteverify?secret=${secret}&response=${code}`)).json()
    if (n.success && n.score >= 0.7 && n.action == action) {
        return true
    } else {
        return false
    }
}
/* harmony default export */ const src_recaptcha = (recaptcha);
;// CONCATENATED MODULE: ./index.js






addEventListener("fetch", event => {
    event.respondWith(ipfscloud(event.request))
})

async function ipfscloud(req) {
    const urlStr = req.url
    const urlObj = new URL(urlStr)
    const path = urlObj.href.substr(urlObj.origin.length)
    const domain = (urlStr.split('/'))[2]
    const sq = (key) => {
        return urlObj.searchParams.get(key)
    }
    switch (rp(path)) {
        case '/get':
            return fetch(`https://ipfs.io/ipfs/${sq('hash')}`)
        case '/upload':
            if(!sq('token')){
                return src_gres({ type: "json", ctx: { code: -1, success: false },msg:"人机验证结果不存在！"})
            }
            if(!await src_recaptcha(
                TOKEN,
                sq('token'),
                'ipfs_photo'
            )){
                return src_gres({ type: "json", ctx: { code: -1, success: false },msg:"人机验证不通过，请使用合法的网络环境"})
            }
            try {
                const SHARELIST = await KV.get('PHOTOSHARE', { type: "json" })
                const res = await (await (fetch('https://cf2vercel.vercel.app/api/v0/add?pin=true', req))).json()
                SHARELIST.push({
                    hash: res.Hash,
                    name: res.Name,
                    size: res.Size
                })
                for(var i in accept_namespaceObject){
                    if(res.Name.endsWith(accept_namespaceObject[i])){
                        await KV.put('PHOTOSHARE', JSON.stringify(SHARELIST))
                        return src_gres({ type: "json", ctx: { code: 0, success: true }})
                    }
                }
                return src_gres({ type: "json", ctx: { code: -1, success: false },msg:"不合法的后缀"})
            } catch (t) {
                return src_gres({ type: "json", ctx: { code: -1, success: false }, msg: t })
            }
        case '/':
            const hinit = `${currentinit}${await (async () => {
                const SHARELIST = await KV.get('PHOTOSHARE', { type: "json" })
                let y = ''
                for (var i in SHARELIST) {
                    y = init.replace(/<!--HASH-->/g, SHARELIST[i].hash)
                        .replace(/<!--URL-->/g, `https://${domain}/get?hash=${SHARELIST[i].hash}`)
                        .replace(/<!--NAME-->/g, SHARELIST[i].name)
                        .replace(/<!--INTRO-->/g, `${SHARELIST[i].size/1024}KB`) + y
                }
                return y
            })()}`
            return src_gres({
                ctx: cjs_js_index.replace(/<ul class="cd-slider">/g, `<ul class="cd-slider" style="transform:unset;">${hinit}`)
                ,
                type: "html"
            })
    }
}


const rp = (path) => {
    return path.split("?")[0]


}


function timestampToTime(timestamp) {

    var date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000

    var Y = date.getFullYear() + '-';

    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';

    var D = date.getDate() + ' ';

    var h = date.getHours() + ':';

    var m = date.getMinutes() + ':';

    var s = date.getSeconds();

    return Y + M + D + h + m + s;

}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module doesn't tell about it's top-level declarations so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[717]();
/******/ 	
/******/ })()
;